
Lab1 blink.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000284  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000230  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000284  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002b4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000002f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ac8  00000000  00000000  00000314  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000068a  00000000  00000000  00000ddc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003ef  00000000  00000000  00001466  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001858  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000396  00000000  00000000  0000187c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004c8  00000000  00000000  00001c12  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000020da  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 16 01 	jmp	0x22c	; 0x22c <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
 */
int main(void)
{
    // Set pin as output in Data Direction Register
    // DDRB = DDRB or 0010 0000
    DDRB = DDRB | (1<<LED_GREEN);
  80:	25 9a       	sbi	0x04, 5	; 4

    // Set pin LOW in Data Register (LED off)
    // PORTB = PORTB and 1101 1111
    PORTB = PORTB & ~(1<<LED_GREEN);
  82:	2d 98       	cbi	0x05, 5	; 5

    // Infinite loop
    while (1)
    {
		// D
		PORTB = PORTB ^ (1<<LED_GREEN);
  84:	80 e2       	ldi	r24, 0x20	; 32
  86:	95 b1       	in	r25, 0x05	; 5
  88:	98 27       	eor	r25, r24
  8a:	95 b9       	out	0x05, r25	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  8c:	2f ef       	ldi	r18, 0xFF	; 255
  8e:	3b e4       	ldi	r19, 0x4B	; 75
  90:	9d e1       	ldi	r25, 0x1D	; 29
  92:	21 50       	subi	r18, 0x01	; 1
  94:	30 40       	sbci	r19, 0x00	; 0
  96:	90 40       	sbci	r25, 0x00	; 0
  98:	e1 f7       	brne	.-8      	; 0x92 <main+0x12>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <main+0x1c>
  9c:	00 00       	nop
        // Pause several miliseconds
        _delay_ms(3*SHORT_DELAY);
		
		PORTB = PORTB ^ (1<<LED_GREEN);
  9e:	95 b1       	in	r25, 0x05	; 5
  a0:	98 27       	eor	r25, r24
  a2:	95 b9       	out	0x05, r25	; 5
  a4:	2f ef       	ldi	r18, 0xFF	; 255
  a6:	33 ec       	ldi	r19, 0xC3	; 195
  a8:	99 e0       	ldi	r25, 0x09	; 9
  aa:	21 50       	subi	r18, 0x01	; 1
  ac:	30 40       	sbci	r19, 0x00	; 0
  ae:	90 40       	sbci	r25, 0x00	; 0
  b0:	e1 f7       	brne	.-8      	; 0xaa <main+0x2a>
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <main+0x34>
  b4:	00 00       	nop
		_delay_ms(SHORT_DELAY);

		PORTB = PORTB ^ (1<<LED_GREEN);
  b6:	95 b1       	in	r25, 0x05	; 5
  b8:	98 27       	eor	r25, r24
  ba:	95 b9       	out	0x05, r25	; 5
  bc:	2f ef       	ldi	r18, 0xFF	; 255
  be:	33 ec       	ldi	r19, 0xC3	; 195
  c0:	99 e0       	ldi	r25, 0x09	; 9
  c2:	21 50       	subi	r18, 0x01	; 1
  c4:	30 40       	sbci	r19, 0x00	; 0
  c6:	90 40       	sbci	r25, 0x00	; 0
  c8:	e1 f7       	brne	.-8      	; 0xc2 <main+0x42>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <main+0x4c>
  cc:	00 00       	nop
		_delay_ms(SHORT_DELAY);
		
		PORTB = PORTB ^ (1<<LED_GREEN);
  ce:	95 b1       	in	r25, 0x05	; 5
  d0:	98 27       	eor	r25, r24
  d2:	95 b9       	out	0x05, r25	; 5
  d4:	2f ef       	ldi	r18, 0xFF	; 255
  d6:	33 ec       	ldi	r19, 0xC3	; 195
  d8:	99 e0       	ldi	r25, 0x09	; 9
  da:	21 50       	subi	r18, 0x01	; 1
  dc:	30 40       	sbci	r19, 0x00	; 0
  de:	90 40       	sbci	r25, 0x00	; 0
  e0:	e1 f7       	brne	.-8      	; 0xda <main+0x5a>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <main+0x64>
  e4:	00 00       	nop
		_delay_ms(SHORT_DELAY);
		
		PORTB = PORTB ^ (1<<LED_GREEN);
  e6:	95 b1       	in	r25, 0x05	; 5
  e8:	98 27       	eor	r25, r24
  ea:	95 b9       	out	0x05, r25	; 5
  ec:	2f ef       	ldi	r18, 0xFF	; 255
  ee:	33 ec       	ldi	r19, 0xC3	; 195
  f0:	99 e0       	ldi	r25, 0x09	; 9
  f2:	21 50       	subi	r18, 0x01	; 1
  f4:	30 40       	sbci	r19, 0x00	; 0
  f6:	90 40       	sbci	r25, 0x00	; 0
  f8:	e1 f7       	brne	.-8      	; 0xf2 <main+0x72>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <main+0x7c>
  fc:	00 00       	nop
		_delay_ms(SHORT_DELAY);
		
		// pause between letters
		PORTB = PORTB & ~(1<<LED_GREEN); // turn off LED between letters
  fe:	2d 98       	cbi	0x05, 5	; 5
 100:	2f ef       	ldi	r18, 0xFF	; 255
 102:	3b e4       	ldi	r19, 0x4B	; 75
 104:	9d e1       	ldi	r25, 0x1D	; 29
 106:	21 50       	subi	r18, 0x01	; 1
 108:	30 40       	sbci	r19, 0x00	; 0
 10a:	90 40       	sbci	r25, 0x00	; 0
 10c:	e1 f7       	brne	.-8      	; 0x106 <main+0x86>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <main+0x90>
 110:	00 00       	nop
		_delay_ms(3*SHORT_DELAY);
		
		// E
		
        PORTB = PORTB ^ (1<<LED_GREEN);
 112:	95 b1       	in	r25, 0x05	; 5
 114:	98 27       	eor	r25, r24
 116:	95 b9       	out	0x05, r25	; 5
 118:	2f ef       	ldi	r18, 0xFF	; 255
 11a:	33 ec       	ldi	r19, 0xC3	; 195
 11c:	99 e0       	ldi	r25, 0x09	; 9
 11e:	21 50       	subi	r18, 0x01	; 1
 120:	30 40       	sbci	r19, 0x00	; 0
 122:	90 40       	sbci	r25, 0x00	; 0
 124:	e1 f7       	brne	.-8      	; 0x11e <main+0x9e>
 126:	00 c0       	rjmp	.+0      	; 0x128 <main+0xa8>
 128:	00 00       	nop
		_delay_ms(SHORT_DELAY);

		// pause between letters

		PORTB = PORTB & ~(1<<LED_GREEN); // turn off LED between letters 
 12a:	2d 98       	cbi	0x05, 5	; 5
 12c:	2f ef       	ldi	r18, 0xFF	; 255
 12e:	3b e4       	ldi	r19, 0x4B	; 75
 130:	9d e1       	ldi	r25, 0x1D	; 29
 132:	21 50       	subi	r18, 0x01	; 1
 134:	30 40       	sbci	r19, 0x00	; 0
 136:	90 40       	sbci	r25, 0x00	; 0
 138:	e1 f7       	brne	.-8      	; 0x132 <main+0xb2>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <main+0xbc>
 13c:	00 00       	nop
		_delay_ms(3*SHORT_DELAY);
		
		// 2
		PORTB = PORTB ^ (1<<LED_GREEN);
 13e:	95 b1       	in	r25, 0x05	; 5
 140:	98 27       	eor	r25, r24
 142:	95 b9       	out	0x05, r25	; 5
 144:	2f ef       	ldi	r18, 0xFF	; 255
 146:	33 ec       	ldi	r19, 0xC3	; 195
 148:	99 e0       	ldi	r25, 0x09	; 9
 14a:	21 50       	subi	r18, 0x01	; 1
 14c:	30 40       	sbci	r19, 0x00	; 0
 14e:	90 40       	sbci	r25, 0x00	; 0
 150:	e1 f7       	brne	.-8      	; 0x14a <main+0xca>
 152:	00 c0       	rjmp	.+0      	; 0x154 <main+0xd4>
 154:	00 00       	nop
		_delay_ms(SHORT_DELAY);

		PORTB = PORTB ^ (1<<LED_GREEN);
 156:	95 b1       	in	r25, 0x05	; 5
 158:	98 27       	eor	r25, r24
 15a:	95 b9       	out	0x05, r25	; 5
 15c:	2f ef       	ldi	r18, 0xFF	; 255
 15e:	33 ec       	ldi	r19, 0xC3	; 195
 160:	99 e0       	ldi	r25, 0x09	; 9
 162:	21 50       	subi	r18, 0x01	; 1
 164:	30 40       	sbci	r19, 0x00	; 0
 166:	90 40       	sbci	r25, 0x00	; 0
 168:	e1 f7       	brne	.-8      	; 0x162 <main+0xe2>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <main+0xec>
 16c:	00 00       	nop
		_delay_ms(SHORT_DELAY);
		
		PORTB = PORTB ^ (1<<LED_GREEN);
 16e:	95 b1       	in	r25, 0x05	; 5
 170:	98 27       	eor	r25, r24
 172:	95 b9       	out	0x05, r25	; 5
 174:	2f ef       	ldi	r18, 0xFF	; 255
 176:	33 ec       	ldi	r19, 0xC3	; 195
 178:	99 e0       	ldi	r25, 0x09	; 9
 17a:	21 50       	subi	r18, 0x01	; 1
 17c:	30 40       	sbci	r19, 0x00	; 0
 17e:	90 40       	sbci	r25, 0x00	; 0
 180:	e1 f7       	brne	.-8      	; 0x17a <main+0xfa>
 182:	00 c0       	rjmp	.+0      	; 0x184 <main+0x104>
 184:	00 00       	nop
		_delay_ms(SHORT_DELAY);
		
		PORTB = PORTB ^ (1<<LED_GREEN);
 186:	95 b1       	in	r25, 0x05	; 5
 188:	98 27       	eor	r25, r24
 18a:	95 b9       	out	0x05, r25	; 5
 18c:	2f ef       	ldi	r18, 0xFF	; 255
 18e:	33 ec       	ldi	r19, 0xC3	; 195
 190:	99 e0       	ldi	r25, 0x09	; 9
 192:	21 50       	subi	r18, 0x01	; 1
 194:	30 40       	sbci	r19, 0x00	; 0
 196:	90 40       	sbci	r25, 0x00	; 0
 198:	e1 f7       	brne	.-8      	; 0x192 <main+0x112>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <main+0x11c>
 19c:	00 00       	nop
		_delay_ms(SHORT_DELAY);

		PORTB = PORTB ^ (1<<LED_GREEN);
 19e:	95 b1       	in	r25, 0x05	; 5
 1a0:	98 27       	eor	r25, r24
 1a2:	95 b9       	out	0x05, r25	; 5
 1a4:	2f ef       	ldi	r18, 0xFF	; 255
 1a6:	3b e4       	ldi	r19, 0x4B	; 75
 1a8:	9d e1       	ldi	r25, 0x1D	; 29
 1aa:	21 50       	subi	r18, 0x01	; 1
 1ac:	30 40       	sbci	r19, 0x00	; 0
 1ae:	90 40       	sbci	r25, 0x00	; 0
 1b0:	e1 f7       	brne	.-8      	; 0x1aa <main+0x12a>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <main+0x134>
 1b4:	00 00       	nop
		_delay_ms(3*SHORT_DELAY);
		
		PORTB = PORTB ^ (1<<LED_GREEN);
 1b6:	95 b1       	in	r25, 0x05	; 5
 1b8:	98 27       	eor	r25, r24
 1ba:	95 b9       	out	0x05, r25	; 5
 1bc:	2f ef       	ldi	r18, 0xFF	; 255
 1be:	33 ec       	ldi	r19, 0xC3	; 195
 1c0:	99 e0       	ldi	r25, 0x09	; 9
 1c2:	21 50       	subi	r18, 0x01	; 1
 1c4:	30 40       	sbci	r19, 0x00	; 0
 1c6:	90 40       	sbci	r25, 0x00	; 0
 1c8:	e1 f7       	brne	.-8      	; 0x1c2 <main+0x142>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <main+0x14c>
 1cc:	00 00       	nop
		_delay_ms(SHORT_DELAY);
						
		PORTB = PORTB ^ (1<<LED_GREEN);
 1ce:	95 b1       	in	r25, 0x05	; 5
 1d0:	98 27       	eor	r25, r24
 1d2:	95 b9       	out	0x05, r25	; 5
 1d4:	2f ef       	ldi	r18, 0xFF	; 255
 1d6:	3b e4       	ldi	r19, 0x4B	; 75
 1d8:	9d e1       	ldi	r25, 0x1D	; 29
 1da:	21 50       	subi	r18, 0x01	; 1
 1dc:	30 40       	sbci	r19, 0x00	; 0
 1de:	90 40       	sbci	r25, 0x00	; 0
 1e0:	e1 f7       	brne	.-8      	; 0x1da <main+0x15a>
 1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <main+0x164>
 1e4:	00 00       	nop
		_delay_ms(3*SHORT_DELAY);
		
		PORTB = PORTB ^ (1<<LED_GREEN);
 1e6:	95 b1       	in	r25, 0x05	; 5
 1e8:	98 27       	eor	r25, r24
 1ea:	95 b9       	out	0x05, r25	; 5
 1ec:	2f ef       	ldi	r18, 0xFF	; 255
 1ee:	33 ec       	ldi	r19, 0xC3	; 195
 1f0:	99 e0       	ldi	r25, 0x09	; 9
 1f2:	21 50       	subi	r18, 0x01	; 1
 1f4:	30 40       	sbci	r19, 0x00	; 0
 1f6:	90 40       	sbci	r25, 0x00	; 0
 1f8:	e1 f7       	brne	.-8      	; 0x1f2 <main+0x172>
 1fa:	00 c0       	rjmp	.+0      	; 0x1fc <main+0x17c>
 1fc:	00 00       	nop
		_delay_ms(SHORT_DELAY);

		PORTB = PORTB ^ (1<<LED_GREEN);
 1fe:	95 b1       	in	r25, 0x05	; 5
 200:	98 27       	eor	r25, r24
 202:	95 b9       	out	0x05, r25	; 5
 204:	2f ef       	ldi	r18, 0xFF	; 255
 206:	3b e4       	ldi	r19, 0x4B	; 75
 208:	9d e1       	ldi	r25, 0x1D	; 29
 20a:	21 50       	subi	r18, 0x01	; 1
 20c:	30 40       	sbci	r19, 0x00	; 0
 20e:	90 40       	sbci	r25, 0x00	; 0
 210:	e1 f7       	brne	.-8      	; 0x20a <main+0x18a>
 212:	00 c0       	rjmp	.+0      	; 0x214 <main+0x194>
 214:	00 00       	nop
		_delay_ms(3*SHORT_DELAY);
		
		
		// turn off LED before new cycle
		PORTB = PORTB & ~(1<<LED_GREEN);
 216:	2d 98       	cbi	0x05, 5	; 5
 218:	2f ef       	ldi	r18, 0xFF	; 255
 21a:	37 ea       	ldi	r19, 0xA7	; 167
 21c:	91 e6       	ldi	r25, 0x61	; 97
 21e:	21 50       	subi	r18, 0x01	; 1
 220:	30 40       	sbci	r19, 0x00	; 0
 222:	90 40       	sbci	r25, 0x00	; 0
 224:	e1 f7       	brne	.-8      	; 0x21e <main+0x19e>
 226:	00 c0       	rjmp	.+0      	; 0x228 <main+0x1a8>
 228:	00 00       	nop
 22a:	2d cf       	rjmp	.-422    	; 0x86 <main+0x6>

0000022c <_exit>:
 22c:	f8 94       	cli

0000022e <__stop_program>:
 22e:	ff cf       	rjmp	.-2      	; 0x22e <__stop_program>
